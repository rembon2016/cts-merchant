# Alternative Dockerfile with better env handling
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production=false

# Copy all source files including .env
COPY . .

# Set build args for environment variables (optional fallback)
ARG VITE_API_ROUTES
ENV VITE_API_ROUTES=$VITE_API_ROUTES

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Install wget for healthcheck
RUN apk add --no-cache wget

# Copy built assets from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create a script to inject runtime environment variables if needed
RUN echo '#!/bin/sh' > /docker-entrypoint.sh && \
    echo 'echo "Starting CTS Merchant Application..."' >> /docker-entrypoint.sh && \
    echo 'nginx -g "daemon off;"' >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# Expose port 80
EXPOSE 80

# Start with custom entrypoint
ENTRYPOINT ["/docker-entrypoint.sh"]